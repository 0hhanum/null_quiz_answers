"use strict";(self.webpackChunknull_quiz_answers=self.webpackChunknull_quiz_answers||[]).push([[732],{1520:function(e,n,t){t.r(n),t.d(n,{Head:function(){return p},default:function(){return f}});var l=t(1151),a=t(7294);function r(e){const n=Object.assign({h1:"h1",p:"p",pre:"pre",code:"code",strong:"strong",h2:"h2"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.h1,null,"유니온 타입"),"\n",a.createElement(n.p,null,"유니온 타입(Union Type)이란 자바스크립트의 OR 연산자(||)와 같이 A이거나 B이다 라는 의미의 타입입니다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"function foo(bar: string | number) {\n  ...\n}\n")),"\n",a.createElement(n.p,null,"파라미터 ",a.createElement(n.code,null,"bar"),"의 인자로 ",a.createElement(n.code,null,"string"),"과 ",a.createElement(n.code,null,"number")," 타입 모두 올 수 있습니다."),"\n",a.createElement(n.h1,null,"인터섹션 타입"),"\n",a.createElement(n.p,null,"인터섹션 타입은 여러 타입을 모두 만족하는 하나의 타입을 의미합니다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"interface A {\n  foo: string;\n  bar: number;\n}\ninterface B {\n  foo: string;\n  baz: number;\n}\ntype C = A & B;\n")),"\n",a.createElement(n.p,null,"인터페이스 ",a.createElement(n.code,null,"A"),"와 ",a.createElement(n.code,null,"B"),"를 모두 만족해야 하기 때문에 C는 아래와 같이 정의됩니다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"{\n  foo: string;\n  bar: number;\n  baz: number;\n}\n")),"\n",a.createElement(n.p,null,"세 프로퍼티 중 하나라도 빠지면 컴파일 오류가 발생합니다."),"\n",a.createElement(n.p,null,"문제의 경우, 타입 ",a.createElement(n.code,null,"a"),", ",a.createElement(n.code,null,"b"),"가 모두 ",a.createElement(n.code,null,"foo")," 프로퍼티를 가지며, 서로 다른 타입으로 정의되었기 때문에 타입 ",a.createElement(n.code,null,"a & b")," 를 만족시킬 수 있는 객체는 존재하지 않습니다."),"\n",a.createElement(n.h1,null,"❗️ 주의 ❗️"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"interface"),"나 객체의 타입을 다룰 때 유니온 타입(|)을 ",a.createElement(n.strong,null,"합집합")," 처럼 생각하면 문제가 생길 수 있습니다."),"\n",a.createElement(n.p,null,"유니온 타입의 정의인 '",a.createElement(n.strong,null,"A거나 B이다"),"'라는 정의에 주목해야 합니다. 유니온 타입은 두 타입의 특성을 결합하지 않고, 대신 두 타입 중 ",a.createElement(n.strong,null,"적어도 하나라도 일치하는")," 값을 허용합니다."),"\n",a.createElement(n.h2,null,"예시 1"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},'interface A {\n  foo: string;\n  bar: number;\n}\ninterface B {\n  baz: number;\n  foobar: string;\n}\ntype C = A | B;\n\nconst c1: C = {\n  foo: "foo",\n  bar: 0,\n}; // 문제 없음 - A에 부합\n\nconst c2: C = {\n  baz: 1,\n  foobar: "foobar",\n}; // 문제 없음 - B에 부합\n\nconst c3: C = {\n  foo: "foo",\n  bar: 0,\n  foobar: "foobar",\n}; // 문제 없음 - B의 속성을 가지고 있지만 A에 부합\n\nconst c4: C = {\n  foo: "foo",\n  foobar: "foobar",\n}; // 오류 - A도 B도 부합하지 않음\n')),"\n",a.createElement(n.p,null,"위와 같이 객체 ",a.createElement(n.code,null,"c4"),"는 합집합의 개념으로 생각한다면 말이 되지만 타입 ",a.createElement(n.code,null,"A"),", ",a.createElement(n.code,null,"B")," 중 어떤 것도 만족시키지 못하기 때문에 컴파일 오류가 발생합니다."),"\n",a.createElement(n.p,null,"다시말해 유니온 타입의 핵심은, ",a.createElement(n.strong,null,"선언된 타입 중 적어도 하나의 전체 조건을 만족시키는")," 값이어야 한다는 점입니다."),"\n",a.createElement(n.p,null,"조금 더 복잡한 예시를 보겠습니다. 동일한 프로퍼티 ",a.createElement(n.code,null,"foo"),"를 가지지만 서로 타입이 다른 경우입니다."),"\n",a.createElement(n.h2,null,"예시 2"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},'interface A {\n  foo: string;\n  bar: number;\n}\ninterface B {\n  foo: number;\n  baz: string;\n}\ntype C = A | B;\n\nconst c1: C = {\n  foo: "foo",\n  bar: 1,\n}; // 문제 없음 - A 부합\n\nconst c2: C = {\n  foo: "foo",\n  bar: 0,\n  baz: "baz",\n}; // **문제 없음** - A 부합\n')),"\n",a.createElement(n.p,null,"퀴즈와 동일한 케이스입니다.\n타입 ",a.createElement(n.code,null,"B"),"의 ",a.createElement(n.code,null,"foo")," 속성은 ",a.createElement(n.code,null,"number"),"이므로 ",a.createElement(n.code,null,"c2"),"가 타입 ",a.createElement(n.code,null,"B"),"를 만족시키지는 못하지만, ",a.createElement(n.strong,null,a.createElement(n.code,null,"A"),"에는 부합합니다.")," 따라서 ",a.createElement(n.code,null,"c2"),"는 타입 ",a.createElement(n.code,null,"C"),"에 부합합니다."))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?a.createElement(n,e,a.createElement(r,e)):r(e)},o=t(4630),m=t(394),u=t(837),s=t(9622);const E=m.styled.div.attrs({className:"container"}).withConfig({displayName:"mdxfrontmatter__id__Container",componentId:"sc-1gyqok2-0"})(["margin-top:15%;"]),i=m.styled.div.withConfig({displayName:"mdxfrontmatter__id__FlexEndContainer",componentId:"sc-1gyqok2-1"})(["display:flex;justify-content:end;"]);u.Z.registerLanguage("javascript",s.Z);const d=e=>{let{children:n,data:{mdx:t}}=e;const{title:l,date:r,tags:c,relatedLinks:o}=t.frontmatter;return(0,a.useEffect)((()=>{u.Z.highlightAll()}),[]),a.createElement(a.Fragment,null,a.createElement("link",{rel:"stylesheet",href:"https://cdn.jsdelivr.net/npm/highlight.js@10.7.2/styles/atom-one-dark.min.css"}),a.createElement(E,null,a.createElement("h1",null,l),a.createElement("div",null,a.createElement("i",null,"About "),null==c?void 0:c.map(((e,n)=>a.createElement("i",{key:n},e,n!==c.length-1&&", ")))),a.createElement(i,null,a.createElement("i",null,r)),a.createElement("hr",null)),a.createElement(E,null,a.createElement("section",null,n)),a.createElement("article",null,a.createElement("h3",null,"더 알아보려면?"),a.createElement("ul",null,null==o?void 0:o.map(((e,n)=>a.createElement("li",{key:n},a.createElement("a",{href:e||"#"},e)))))),a.createElement(i,null,a.createElement("a",{href:"https://github.com/0hhanum/null_quiz_answers/issues/new?title="+l+" 수정 요청&body=잘못된 정보를 고쳐주시면 기프티콘을 드려요 :)"},a.createElement("p",null,"잘못된 정보가 있나요?"))))};function f(e){return a.createElement(d,e,a.createElement(c,e))}const p=e=>{var n,t;let{data:l}=e;return a.createElement(o.Z,{title:(null===(n=l.mdx)||void 0===n||null===(t=n.frontmatter)||void 0===t?void 0:t.title)||""})}}}]);
//# sourceMappingURL=component---src-pages-answer-mdx-frontmatter-id-tsx-content-file-path-contents-ts-union-and-intersection-types-mdx-c11449f54850e7ccbbba.js.map