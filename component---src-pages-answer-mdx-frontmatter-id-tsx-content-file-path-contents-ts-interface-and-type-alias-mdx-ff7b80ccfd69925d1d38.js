"use strict";(self.webpackChunknull_quiz_answers=self.webpackChunknull_quiz_answers||[]).push([[490],{8479:function(e,n,t){t.r(n),t.d(n,{Head:function(){return g},default:function(){return E}});var l=t(1151),a=t(7294);function r(e){const n=Object.assign({p:"p",code:"code",h1:"h1",pre:"pre"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"문제의 세 가지 보기는 개인적으로 객체의 타입을 생성할 때 ",a.createElement(n.code,null,"type alias"),"와 ",a.createElement(n.code,null,"interface"),"의 가장 큰 차이점이라고 생각하는 부분들입니다."),"\n",a.createElement(n.p,null,"선언 병합이나 암묵적 인덱스 시그니처 등의 차이점도 있지만 그로 비롯되는 ",a.createElement(n.code,null,"interface"),"의 단점들은 깨끗한 코드와 네임스페이스를 통해 해결 가능하다고 생각합니다."),"\n",a.createElement(n.h1,null,"Mapped type"),"\n",a.createElement(n.p,null,"Mapped type은 다음과 같이 정의됩니다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"type MappedType<T> = {\n  [P in keyof T]: T[P];\n};\n\n")),"\n",a.createElement(n.p,null,"맵드 타입을 사용하면 기존 타입을 기반으로 새로운 타입을 유연하게 생성하고 조정해 복잡한 타입 작업을 보다 쉽게 처리할 수 있습니다."),"\n",a.createElement(n.p,null,"다음과 같은 방식으로 사용됩니다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"interface LoginForm {\n  username: string;\n  password: string;\n}\n\n// 폼 필드의 유효성\ntype FieldValidity<T> = {\n  [P in keyof T]: boolean;\n};\n\ntype LoginFormValidity = FieldValidity<LoginForm>;\n")),"\n",a.createElement(n.h1,null,"명시적 확장 (extends)"),"\n",a.createElement(n.p,null,"인터페이스를 확장하려면 extends 키워드를 사용합니다.\n이 방식은 상속과 유사하게, 기본 인터페이스의 모든 속성을 상속받은 새로운 인터페이스를 생성합니다.\n관계를 명확하게 정의하고 재사용성을 높이는 데 사용할 수 있습니다."),"\n",a.createElement(n.p,null,"아래와 같이 사용됩니다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},'interface User {\n  id: number;\n  name: string;\n}\n\ninterface AdminUser extends User {\n  permissions: string[]; // permissions 속성 추가\n}\n\nconst admin: AdminUser = {\n  id: 1,\n  name: "Admin",\n  permissions: ["create", "read", "update", "delete"],\n};\n')),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"type alias"),"에서는 인터섹션 타입(&)을 통해 비슷한 효과를 낼 수 있습니다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},'type User = {\n  id: number,\n  name: string,\n};\n\ntype AdminPermission = {\n  permissions: string[],\n};\n\ntype AdminUser = User & AdminPermission;\n\nconst admin: AdminUser = {\n  id: 1,\n  name: "Admin",\n  permissions: ["create", "read", "update", "delete"],\n};\n')),"\n",a.createElement(n.h1,null,"유니온 타입"),"\n",a.createElement(n.p,null,"위 예시에서"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"type AdminUser = User & AdminPermission;\n")),"\n",a.createElement(n.p,null,"가 유니온 타입을 통한 타입 정의입니다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"interface AdminUser = User & AdminPermission  // 불가능\n")),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"interface AdminUser extends User & AdminPermission {} // 불가능\n")),"\n",a.createElement(n.p,null,"위와 같은 방식으로는 ",a.createElement(n.code,null,"interface"),"를 정의할 수 없습니다."))}var i=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?a.createElement(n,e,a.createElement(r,e)):r(e)},c=t(4630),s=t(394),m=t(837),u=t(9622);const d=s.styled.div.attrs({className:"container"}).withConfig({displayName:"mdxfrontmatter__id__Container",componentId:"sc-1gyqok2-0"})(["margin-top:15%;"]),o=s.styled.div.withConfig({displayName:"mdxfrontmatter__id__FlexEndContainer",componentId:"sc-1gyqok2-1"})(["display:flex;justify-content:end;"]);m.Z.registerLanguage("javascript",u.Z);const p=e=>{let{children:n,data:{mdx:t}}=e;const{title:l,date:r,tags:i,relatedLinks:c}=t.frontmatter;return(0,a.useEffect)((()=>{m.Z.highlightAll()}),[]),a.createElement(a.Fragment,null,a.createElement("link",{rel:"stylesheet",href:"https://cdn.jsdelivr.net/npm/highlight.js@10.7.2/styles/atom-one-dark.min.css"}),a.createElement(d,null,a.createElement("h1",null,l),a.createElement("div",null,a.createElement("i",null,"About "),null==i?void 0:i.map(((e,n)=>a.createElement("i",{key:n},e,n!==i.length-1&&", ")))),a.createElement(o,null,a.createElement("i",null,r)),a.createElement("hr",null)),a.createElement(d,null,a.createElement("section",null,n)),a.createElement("article",null,a.createElement("h3",null,"더 알아보려면?"),a.createElement("ul",null,null==c?void 0:c.map(((e,n)=>a.createElement("li",{key:n},a.createElement("a",{href:e||"#"},e)))))),a.createElement(o,null,a.createElement("a",{href:"https://github.com/0hhanum/null_quiz_answers/issues/new?title="+l+" 수정 요청&body=잘못된 정보를 고쳐주시면 기프티콘을 드려요 :)"},a.createElement("p",null,"잘못된 정보가 있나요?"))))};function E(e){return a.createElement(p,e,a.createElement(i,e))}const g=e=>{var n,t;let{data:l}=e;return a.createElement(c.Z,{title:(null===(n=l.mdx)||void 0===n||null===(t=n.frontmatter)||void 0===t?void 0:t.title)||""})}}}]);
//# sourceMappingURL=component---src-pages-answer-mdx-frontmatter-id-tsx-content-file-path-contents-ts-interface-and-type-alias-mdx-ff7b80ccfd69925d1d38.js.map