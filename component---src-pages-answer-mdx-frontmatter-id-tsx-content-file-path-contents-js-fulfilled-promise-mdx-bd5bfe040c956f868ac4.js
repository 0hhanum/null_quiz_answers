"use strict";(self.webpackChunknull_quiz_answers=self.webpackChunknull_quiz_answers||[]).push([[647],{5953:function(e,n,t){t.r(n),t.d(n,{Head:function(){return p},default:function(){return h}});var l=t(1151),a=t(7294);function r(e){const n=Object.assign({h1:"h1",p:"p",code:"code",pre:"pre"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.h1,null,"then"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"then"),"이란 어감 때문에 Promise의 상태가 ",a.createElement(n.code,null,"Pending"),"에서 변경될 때 콜백이 실행될 것 같지 않나요? 저는 그랬는데."),"\n",a.createElement(n.p,null,"하지만 그렇지 않습니다."),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"then"),"은 Promise가 이행되거나 거부되었을 때 실행되는 Promise 객체의 메서드로"),"\n",a.createElement(n.p,null,"Promise의 상태 변경과는 '직접적인' 연관은 없습니다. ",a.createElement(n.code,null,"Fulfilled"),"나 ",a.createElement(n.code,null,"Rejected"),"라면 핸들러 함수를 실행할 뿐이죠."),"\n",a.createElement("mark",null,"다만 중요한 점은 이미 ",a.createElement(n.code,null,"Fulfilled"),"나 ",a.createElement(n.code,null,"Rejected")," 상태에서 실행하더라도, 동작 방식은 같아"),"\n",a.createElement("mark",null,"핸들러를 태스크 큐에 넣어 즉시 실행한다는 점입니다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"const a = Promise.resolve(1);\na.then((res) => console.log(res));\na.then((res) => console.log(res));\nconsole.log(123);\n\n// 123\n// 1\n// 1\n")),"\n",a.createElement(n.p,null,"따라서 123이 먼저 출력되게 됩니다."),"\n",a.createElement(n.h1,null,"async await"),"\n",a.createElement(n.p,null,"async / await도 마찬가지입니다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-javascript"},"const a = Promise.resolve(1);\nasync function b() {\n  console.log(await a);\n  console.log(await a);\n}\nb();\n// 1\n// 1\n")),"\n",a.createElement(n.p,null,"프로미스의 상태 변경 자체와는 상관없이 Promise가 이행되었다면 코드를 실행합니다."))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?a.createElement(n,e,a.createElement(r,e)):r(e)},m=t(4630),o=t(394),s=t(837),u=t(9622);const i=o.styled.div.attrs({className:"container"}).withConfig({displayName:"mdxfrontmatter__id__Container",componentId:"sc-1gyqok2-0"})(["margin-top:15%;"]),d=o.styled.div.withConfig({displayName:"mdxfrontmatter__id__FlexEndContainer",componentId:"sc-1gyqok2-1"})(["display:flex;justify-content:end;"]);s.Z.registerLanguage("javascript",u.Z);const E=e=>{let{children:n,data:{mdx:t}}=e;const{title:l,date:r,tags:c,relatedLinks:m}=t.frontmatter;return(0,a.useEffect)((()=>{s.Z.highlightAll()}),[]),a.createElement(a.Fragment,null,a.createElement("link",{rel:"stylesheet",href:"https://cdn.jsdelivr.net/npm/highlight.js@10.7.2/styles/atom-one-dark.min.css"}),a.createElement(i,null,a.createElement("h1",null,l),a.createElement("div",null,a.createElement("i",null,"About "),null==c?void 0:c.map(((e,n)=>a.createElement("i",{key:n},e,n!==c.length-1&&", ")))),a.createElement(d,null,a.createElement("i",null,r)),a.createElement("hr",null)),a.createElement(i,null,a.createElement("section",null,n)),a.createElement("article",null,a.createElement("h3",null,"더 알아보려면?"),a.createElement("ul",null,null==m?void 0:m.map(((e,n)=>a.createElement("li",{key:n},a.createElement("a",{href:e||"#"},e)))))),a.createElement(d,null,a.createElement("a",{href:"https://github.com/0hhanum/null_quiz_answers/issues/new?title="+l+" 수정 요청&body=잘못된 정보를 고쳐주시면 기프티콘을 드려요 :)"},a.createElement("p",null,"잘못된 정보가 있나요?"))))};function h(e){return a.createElement(E,e,a.createElement(c,e))}const p=e=>{var n,t;let{data:l}=e;return a.createElement(m.Z,{title:(null===(n=l.mdx)||void 0===n||null===(t=n.frontmatter)||void 0===t?void 0:t.title)||""})}}}]);
//# sourceMappingURL=component---src-pages-answer-mdx-frontmatter-id-tsx-content-file-path-contents-js-fulfilled-promise-mdx-bd5bfe040c956f868ac4.js.map