{"version":3,"file":"component---src-pages-index-tsx-2ca851730e7184e90e9f.js","mappings":"6LAOe,SAASA,EAAMC,GAAsB,IAADC,EAAAC,EAAAC,EAAAC,EAAA,IAApB,MAAEC,GAAgBL,EAC7C,MAAMM,GAAqBC,EAAAA,EAAAA,IAAc,cASzC,OACIC,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,aACKH,EACQA,EAAK,OAAMC,SAAwB,QAANL,EAAlBK,EAAoBG,YAAI,IAAAR,GAAc,QAAdC,EAAxBD,EAA0BS,oBAAY,IAAAR,OAApB,EAAlBA,EAAwCG,OACtDC,SAAwB,QAANH,EAAlBG,EAAoBG,YAAI,IAAAN,GAAc,QAAdC,EAAxBD,EAA0BO,oBAAY,IAAAN,OAApB,EAAlBA,EAAwCC,OAElDG,EAAAA,cAAA,QACIG,IAAI,gBACJC,KAAK,eACLC,MAAMC,EAAAA,EAAAA,GAAc,yBAIpC,C,kGC1BA,MAAMC,EAAYC,EAAAA,OAAOC,IAAGC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAAVJ,CAAU,kFAMtBK,EAAUL,EAAAA,OAAOM,GAAEJ,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAATJ,CAAS,MAoBzB,UAnBkBhB,IAEyB,IAAAuB,EAAA,IADzCC,MAAM,OAAEC,IAC4BzB,EACpC,OACEQ,EAAAA,cAACO,EAAS,KACRP,EAAAA,cAAA,UAAI,sCACJA,EAAAA,cAACa,EAAO,KACO,QADPE,EACLE,EAAOC,aAAK,IAAAH,OAAA,EAAZA,EAAcI,KAAKC,IAAG,IAAAC,EAAAC,EAAA,OACrBtB,EAAAA,cAAA,MAAIuB,IAAKH,EAAII,KAAKC,IAChBzB,EAAAA,cAAA,KAAGK,KAAI,WAAgC,QAAhCgB,EAAYD,EAAII,KAAKE,mBAAW,IAAAL,OAAA,EAApBA,EAAsBI,KAClB,QADwBH,EAC5CF,EAAII,KAAKE,mBAAW,IAAAJ,OAAA,EAApBA,EAAsBzB,OAEtB,KAGC,EAKT,MAAM8B,EAAeA,IAAM3B,EAAAA,cAACT,EAAAA,EAAM,K","sources":["webpack://null_quiz_answers/./src/components/Helmet.tsx","webpack://null_quiz_answers/./src/pages/index.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport { makeAssetPath } from \"../utils\";\n\ninterface IHelmet {\n    title?: string;\n}\nexport default function Helmet({ title }: IHelmet) {\n    const titleQueryResponse = useStaticQuery<Queries.getTitleQuery>(graphql`\n        query getTitle {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `);\n    return (\n        <>\n            <title>\n                {title\n                    ? `${title} | ${titleQueryResponse?.site?.siteMetadata?.title}`\n                    : titleQueryResponse?.site?.siteMetadata?.title}\n            </title>\n            <link\n                rel=\"shortcut icon\"\n                type=\"image/x-icon\"\n                href={makeAssetPath(\"/images/favicon.ico\")}\n            ></link>\n        </>\n    );\n}\n","import React from \"react\";\nimport { PageProps, HeadFC, graphql } from \"gatsby\";\nimport Helmet from \"../components/Helmet\";\nimport { styled } from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\nconst MdxList = styled.ul``;\nconst IndexPage = ({\n  data: { allMdx },\n}: PageProps<Queries.getAllMdxesQuery>) => {\n  return (\n    <Container>\n      <h1>Welcome to the answer hub of null.</h1>\n      <MdxList>\n        {allMdx.edges?.map((mdx) => (\n          <li key={mdx.node.id}>\n            <a href={`answer/${mdx.node.frontmatter?.id!}`}>\n              {mdx.node.frontmatter?.title}\n            </a>\n          </li>\n        ))}\n      </MdxList>\n    </Container>\n  );\n};\n\nexport default IndexPage;\nexport const Head: HeadFC = () => <Helmet />;\nexport const query = graphql`\n  query getAllMdxes {\n    allMdx {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Helmet","_ref","_titleQueryResponse$s","_titleQueryResponse$s2","_titleQueryResponse$s3","_titleQueryResponse$s4","title","titleQueryResponse","useStaticQuery","React","site","siteMetadata","rel","type","href","makeAssetPath","Container","styled","div","withConfig","displayName","componentId","MdxList","ul","_allMdx$edges","data","allMdx","edges","map","mdx","_mdx$node$frontmatter","_mdx$node$frontmatter2","key","node","id","frontmatter","Head"],"sourceRoot":""}