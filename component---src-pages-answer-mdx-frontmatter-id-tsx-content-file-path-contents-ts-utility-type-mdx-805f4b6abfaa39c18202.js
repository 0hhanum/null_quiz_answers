"use strict";(self.webpackChunknull_quiz_answers=self.webpackChunknull_quiz_answers||[]).push([[3],{85:function(e,t,n){n.r(t),n.d(t,{Head:function(){return g},default:function(){return p}});var l=n(1151),a=n(7294);function c(e){const t=Object.assign({h1:"h1",p:"p",h2:"h2",code:"code",pre:"pre"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.h1,null,"유틸리티 타입?"),"\n",a.createElement("blockquote",null,a.createElement(t.p,null,'"TypeScript는 공통 타입 변환을 용이하게 하기 위해 몇 가지 유틸리티 타입을\n제공합니다."'),a.createElement("footer",null,a.createElement("cite",null,"- 타입스크립트 핸드북"))),"\n",a.createElement(t.h2,null,"Partial"),"\n",a.createElement(t.p,null,a.createElement(t.code,null,"Partial<T>"),"는 타입 ",a.createElement(t.code,null,"T"),"의 ",a.createElement("mark",null,"모든 프로퍼티를 선택적으로")," 만드는 타입을 구성합니다."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},"type Partial<T> = {\n  [P in keyof T]?: T[P];\n};\n")),"\n",a.createElement(t.p,null,a.createElement(t.code,null,"Partial<T>"),"는 특정 타입 T의 모든 프로퍼티에 ",a.createElement(t.code,null,"?"),"를 붙여 선택적 프로퍼티로 만듭니다."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},"interface IData {\n    title: string;\n    timestamp: number;\n    description: string;\n    tags: tag[]\n}\nfunction updateData(currentData: IData, newData: ?) {\n    update({\n    ...currentData,\n    ...newData,\n    timestamp: getTimestamp(),\n    });\n}\n")),"\n",a.createElement(t.p,null,"일반적으로 업데이트 함수는 기존 데이터의 특정 부분을 변경합니다.\n",a.createElement(t.code,null,"updateData")," 함수는 ",a.createElement(t.code,null,"newData"),"를 인자로 받아 해당 데이터를 타임스탬프와 함께 업데이트합니다."),"\n",a.createElement(t.p,null,"스프레드 연산자를 사용한 것으로 보아 newData가 ",a.createElement("b",null,"어떤 프로퍼티를 가지는 지 확실하지 않습니다."),"\n",a.createElement(t.code,null,"title"),"을 업데이트 할 수도, ",a.createElement(t.code,null,"description"),"이나 ",a.createElement(t.code,null,"tags"),"를, 또는 셋 모두 업데이트 할 수도 있습니다."),"\n",a.createElement(t.p,null,"따라서 이 경우, ",a.createElement(t.code,null,"IData"),"의 모든 프로퍼티를 옵셔널로 만드는 ",a.createElement(t.code,null,"Partial")," 유틸리티 타입이 적합합니다."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},"Partial<IData>\n    {\n    title?: string;\n    timestamp?: number;\n    description?: string;\n    tags?: tag[]\n    }\n")),"\n",a.createElement(t.h2,null,"Required"),"\n",a.createElement(t.p,null,a.createElement(t.code,null,"Partial<T>"),"와 반대로 모든 프로퍼티를 필수로 설정하는 타입을 만드는 ",a.createElement(t.code,null,"Required<T>")," 유틸리티 타입도 있습니다."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},'interface IData {\n  title?: string;\n  description?: string;\n}\nconst a: IData = { title: "some title" }; // description이 없어도 OK.\nconst b: Required<IData> = { title: "some title" }; // 오류: 프로퍼티 description이 없습니다.\n')),"\n",a.createElement(t.h2,null,"Omit"),"\n",a.createElement(t.p,null,a.createElement(t.code,null,"Omit<T, K>"),"은 타입 ",a.createElement("mark",null,"T의 프로퍼티 중 K를 제거한 타입"),"을 구성합니다."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},"type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n")),"\n",a.createElement(t.p,null,a.createElement(t.code,null,"T"),"의 프로퍼티를 인자로 받으며(",a.createElement(t.code,null,"K extends keyof T"),"), ",a.createElement(t.code,null,"T")," 프로퍼티 중 ",a.createElement(t.code,null,"K"),"를 제외한(",a.createElement(t.code,null,"Pick<T, Exclude<keyof T, K>>"),") 새로운 타입을 구성합니다."),"\n",a.createElement(t.p,null,"퀴즈의 ",a.createElement(t.code,null,"updateData")," 함수는 ",a.createElement(t.code,null,"newData")," 프로퍼티가 명확하지 않아도 범용적으로 사용할 수 있는 함수로 특정 프로퍼티를 제외하는 ",a.createElement(t.code,null,"Omit<T, K>"),"는 적합하지 않습니다.\n추상화 레벨이 한 단계 높아진다면 사용할 수는 있습니다. 아래와 같이요."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},'function updateTitle(\n  currentData: IData,\n  newData: Omit<IData, "description" | "tags">\n) {\n  update({\n    ...currentData,\n    ...newData,\n  });\n}\n')),"\n",a.createElement(t.p,null,"하지만 위와 같이 프로퍼티를 특정해 어떤 동작을 수행하는 경우, ",a.createElement(t.code,null,"IData"),"가 확장될 경우 의도하지 않은 속성이 같이 업데이트 될 위험이 있습니다.\n",a.createElement(t.code,null,"newData.title"),"을 특정해 ",a.createElement(t.code,null,"title"),"을 업데이트 할 수도 있겠지만 위 경우 대상 프로퍼티를 정의해 주는 것이 논리적으로 적절합니다."),"\n",a.createElement(t.p,null,"이럴 경우에 ",a.createElement(t.code,null,"Pick<T, K>"),"을 사용합니다."),"\n",a.createElement(t.h2,null,"Pick"),"\n",a.createElement(t.p,null,a.createElement(t.code,null,"Pick<T, K>"),"은 타입 ",a.createElement(t.code,null,"T"),"에서 ",a.createElement("mark",null,"특정 프로퍼티를 선택해 새로운 타입을 구성"),"합니다."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},"type Pick<T, K extends keyof T> = {\n  [P in K]: T[P];\n};\n")),"\n",a.createElement(t.p,null,"두 번째 인자 ",a.createElement(t.code,null,"K"),"로 ",a.createElement(t.code,null,"T")," 타입의 프로퍼티를 받으며, ",a.createElement(t.code,null,"K"),"를 프로퍼티로 가지는 새로운 타입을 구성합니다.\n위의 ",a.createElement(t.code,null,"updateTitle()"),"에 아래와 같이 적용할 수 있습니다."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},'function updateTitle(currentData: IData, newData: Pick<IData, "title">) {\n  update({\n    ...currentData,\n    ...newData,\n  });\n}\n')),"\n",a.createElement(t.h2,null,"Record"),"\n",a.createElement(t.p,null,a.createElement(t.code,null,"Record<K, T>"),"는 ",a.createElement("mark",null,"첫 번째 인자 타입 K를 프로퍼티로, 해당 프로퍼티의 타입으로 T"),"를 가지는 새로운 객체 타입을 구성합니다."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},"type Record<K extends keyof any, T> = {\n  [P in K]: T;\n};\n")),"\n",a.createElement(t.p,null,"아래와 같이 사용할 수 있습니다."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},'type dataState = "pending" | "fulfilled" | "error"\nconst obj: Record<dataState, IData[]> = {\n    pending: IData 타입의 객체 배열,\n    fulfilled: IData 타입의 객체 배열,\n    error: IData 타입의 객체 배열,\n}\n')),"\n",a.createElement(t.p,null,a.createElement(t.code,null,"Partial"),"과의 콤비네이션도 가넝."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},'type dataState = "pending" | "fulfilled" | "error"\nconst obj: Partial<Record<dataState, IData[]>> = {\n    pending: IData 타입의 객체 배열\n} // fulfilled, error 프로퍼티가 없어도 OK.\n')))}var r=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.ah)(),e.components);return t?a.createElement(t,e,a.createElement(c,e)):c(e)},m=n(4630),u=n(394),i=n(837),o=n(9622);const d=u.styled.div.attrs({className:"container"}).withConfig({displayName:"mdxfrontmatter__id__Container",componentId:"sc-1gyqok2-0"})(["margin-top:15%;"]),s=u.styled.div.withConfig({displayName:"mdxfrontmatter__id__FlexEndContainer",componentId:"sc-1gyqok2-1"})(["display:flex;justify-content:end;"]);i.Z.registerLanguage("javascript",o.Z);const E=e=>{let{children:t,data:{mdx:n}}=e;const{title:l,date:c,tags:r,relatedLinks:m}=n.frontmatter;return(0,a.useEffect)((()=>{i.Z.highlightAll()}),[]),a.createElement(a.Fragment,null,a.createElement("link",{rel:"stylesheet",href:"https://cdn.jsdelivr.net/npm/highlight.js@10.7.2/styles/atom-one-dark.min.css"}),a.createElement(d,null,a.createElement("h1",null,l),a.createElement("div",null,a.createElement("i",null,"About "),null==r?void 0:r.map(((e,t)=>a.createElement("i",{key:t},e,t!==r.length-1&&", ")))),a.createElement(s,null,a.createElement("i",null,c)),a.createElement("hr",null)),a.createElement(d,null,a.createElement("section",null,t)),a.createElement("article",null,a.createElement("h3",null,"더 알아보려면?"),a.createElement("ul",null,null==m?void 0:m.map(((e,t)=>a.createElement("li",{key:t},a.createElement("a",{href:e||"#"},e)))))),a.createElement(s,null,a.createElement("a",{href:"https://github.com/0hhanum/null_quiz_answers/issues/new?title="+l+" 수정 요청&body=잘못된 정보를 고쳐주시면 기프티콘을 드려요 :)"},a.createElement("p",null,"잘못된 정보가 있나요?"))))};function p(e){return a.createElement(E,e,a.createElement(r,e))}const g=e=>{var t,n;let{data:l}=e;return a.createElement(m.Z,{title:(null===(t=l.mdx)||void 0===t||null===(n=t.frontmatter)||void 0===n?void 0:n.title)||""})}}}]);
//# sourceMappingURL=component---src-pages-answer-mdx-frontmatter-id-tsx-content-file-path-contents-ts-utility-type-mdx-805f4b6abfaa39c18202.js.map