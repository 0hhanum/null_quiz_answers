{"version":3,"file":"component---src-pages-answer-mdx-frontmatter-id-tsx-content-file-path-contents-react-automatic-batching-mdx-24d3a1625363762a143d.js","mappings":"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","sources":["webpack://null_quiz_answers/./contents/react/automaticBatching.mdx","webpack://null_quiz_answers/./src/pages/answer/{mdx.frontmatter__id}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"batching?\"), \"\\n\", React.createElement(_components.p, null, \"배칭이란 리액트가 더 나은 성능을 위해 여러 상태 업데이트를 하나로 묶어 리렌더링 하는 것을 의미합니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"const Component = () => {\\n  const [state1, setState1] = useState(true);\\n  const [state2, setState2] = useState(true);\\n\\n  const onClick = () => {\\n    setState1(false); // 리렌더링 전\\n    setState2(true); // 리렌더링 전\\n    // **핸들러 함수가 마무리되면 리렌더링\\n  };\\n\\n  ...\\n};\\n\")), \"\\n\", React.createElement(_components.p, null, \"리액트는 상태 변경에 대응해 리렌더링합니다.\"), \"\\n\", React.createElement(_components.p, null, \"하지만 위 경우, \", React.createElement(_components.code, null, \"setState1\"), \"과 \", React.createElement(_components.code, null, \"setState2\"), \"에 모두 반응하여 두 번 리렌더링한다면 성능적으로 좋지 않겠죠?\"), \"\\n\", React.createElement(_components.p, null, \"또한 절반만 완료된 업데이트가 반영되어 의도하지 않은 상태 조합을 가질 수도 있습니다.\"), \"\\n\", React.createElement(_components.p, null, \"이를 위해 리액트 팀은 \", React.createElement(_components.code, null, \"batching\"), \"이라는 개념을 도입했습니다.\"), \"\\n\", React.createElement(_components.p, null, \"동시에 일어나는 상태 변경을 한 번에 처리해 렌더링 횟수를 최적화합니다.\"), \"\\n\", React.createElement(\"mark\", null, \"하지만 React 17까지는 이벤트 핸들러 밖에서 발생하는 업데이트에 대해서는 배칭하지 않았습니다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"const Component = () => {\\n  const [state1, setState1] = useState(true);\\n  const [state2, setState2] = useState(true);\\n\\n  const onClick = () => {\\n    fetchiApi().then(() => {\\n      // onClick 핸들러가 마무리 된 후에 실행\\n      // fetchApi의 콜백으로 동작\\n      setState1(false); // 리렌더링\\n      setState2(true); // 리렌더링\\n    })\\n  };\\n\\n  ...\\n};\\n\")), \"\\n\", React.createElement(_components.p, null, \"위 예시처럼, \", React.createElement(_components.code, null, \"onClick\"), \" 함수가 종료된 후에 실행되는 비동기 요청에 대한 콜백이나,\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"setTimeout\"), \", \", React.createElement(_components.code, null, \"Promise\"), \" 혹은 네이티브 이벤트에 대한 핸들러 내부의 업데이트는 배칭되지 않았습니다.\"), \"\\n\", React.createElement(_components.p, null, \"리렌더링이 두 번 발생하고 있죠.\"), \"\\n\", React.createElement(_components.p, null, \"이를 해결하기 위해 React 18에서 \", React.createElement(_components.code, null, \"Automatic batching\"), \"이 소개됩니다.\"), \"\\n\", React.createElement(_components.h1, null, \"Automatic batching\"), \"\\n\", React.createElement(_components.p, null, \"React 18의 \", React.createElement(_components.code, null, \"createRoot\"), \"로 생성된 루트 내의 모든 업데이트는 어디서 왔는가와 무관하게 자동으로 배칭됩니다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"timeout\"), \", \", React.createElement(_components.code, null, \"Promise\"), \"등의 비동기 처리 콜백이나 외부(네이티브) 이벤트 핸들러에 대해서도 배칭이 동작합니다.\"), \"\\n\", React.createElement(_components.p, null, \"리액트 팀은 이를 \", React.createElement(_components.code, null, \"Automatic batching\"), \"이라고 소개했습니다.\"), \"\\n\", React.createElement(\"b\", null, \"신기한 점은 자동 배칭이 짧은 tick 동안 쌓여있는 업데이트들을 묶어 실행한다는 것입니다.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"const Component = () => {\\n  const [state1, setState1] = useState(true);\\n  const [state2, setState2] = useState(true);\\n  const onClick = async () => {\\n    setState1((curr) => !curr); \\n    setState2((curr) => !curr); // 리렌더링\\n    const state = await getServerState(); // 비동기 데이터 waiting\\n    setState1(state);\\n    setState2(state); // 리렌더링\\n    // -------- 한 번에 리렌더링 --------- //\\n    setTimeout(() => {\\n      setState1((curr) => !curr);\\n      setState2((curr) => !curr);\\n    }, 100);\\n    setTimeout(() => {\\n      setState1((curr) => !curr);\\n      setState2((curr) => !curr);\\n    }, 100);\\n    // ------------------------------- //\\n  };\\n};\\n\")), \"\\n\", React.createElement(_components.p, null, \"퀴즈 정답은 3 입니다.\"), \"\\n\", React.createElement(_components.p, null, \"핸들러 내부의 업데이트는 배칭 처리를 할 수 있다고 쳐도, 언제 끝날 지 모르는 외부 업데이트를 어떻게 배치 처리 하는지 신기하지 않나요?\"), \"\\n\", React.createElement(_components.p, null, \"내부적으로 타이머를 돌리는건지, 동작원리가 궁금해져 찾아본 결과 리액트 팀의 답변을 찾았습니다.\"), \"\\n\", React.createElement(\"blockquote\", null, React.createElement(_components.p, null, \"\\\"실질적으로 말하자면, React가 '조금 기다린다'는 것을 의미합니다 (\\\"작업 또는 마이크로 태스크가 끝날 때까지\\\"인 경우 기술 용어). 그러면 React가 화면을 업데이트합니다.\\\"\"), React.createElement(\"footer\", null, React.createElement(\"cite\", null, \"https://github.com/reactwg/react-18/discussions/46#discussioncomment-846862\"))), \"\\n\", React.createElement(_components.p, null, \"간단하게 리액트가 \", React.createElement(_components.code, null, \"batching\"), \" 중일시 업데이트를 큐에 쌓아두고 마이크로 태스크 큐가 비면 배칭된 업데이트를 실행한다는 식의 답변을 확인했습니다.\"), \"\\n\", React.createElement(_components.p, null, \"위의 코드를 테스트해보면 100ms의 \", React.createElement(_components.code, null, \"setTimeout\"), \"이 두 개 돌아가고 있는데도 배칭되어 실행됩니다.\"), \"\\n\", React.createElement(_components.p, null, \"재미있는 테스트를 해보겠습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"const Component = () => {\\n  const [state1, setState1] = useState(0);\\n  const [state2, setState2] = useState(0);\\n  console.log(\\\"rendered\\\", state1, state2)\\n  const onClick = () => {\\n    // setTimeout1\\n    setTimeout(() => { \\n      setState1(1);\\n      setState2(1);\\n    }, 100);\\n    // setTimeout2\\n    setTimeout(() => {\\n      setState1(2);\\n      setState2(2);\\n    }, 101);\\n  };\\n};\\n\")), \"\\n\", React.createElement(_components.p, null, \"위 테스트의 결과는 어떨 것 같나요?\"), \"\\n\", React.createElement(_components.p, null, \"1ms 차이를 두고 배치 처리가 되는지 테스트하는 코드입니다.\"), \"\\n\", React.createElement(_components.p, null, \"결과는 일관적이지 않습니다.\"), \"\\n\", React.createElement(\"b\", null, React.createElement(_components.code, null, \"setTimeout1\"), \"과 \", React.createElement(_components.code, null, \"setTimeout2\"), \"가 동시에 실행되기도, 묶여 실행되기도 합니다.\"), \"\\n\", React.createElement(_components.p, null, \"DOM 페인팅이라던지 어떤 이벤트들이 마이크로태스크큐에 남아있다면 묶여 처리되는걸로 예상됩니다.\"), \"\\n\", React.createElement(_components.p, null, \"리액트 팀의 답변 이해를 돕는 테스트랄까요.\"), \"\\n\", React.createElement(_components.p, null, \"재미있죠?\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/null_quiz_answers/null_quiz_answers/contents/react/automaticBatching.mdx\";\nimport React, {useEffect} from \"react\";\nimport Helmet from \"../../components/Helmet\";\nimport {styled} from \"styled-components\";\nimport hljs from \"highlight.js/lib/core\";\nimport javascript from \"highlight.js/lib/languages/javascript\";\nconst Container = styled.div.attrs({\n  className: \"container\"\n}).withConfig({\n  displayName: \"mdxfrontmatter__id__Container\",\n  componentId: \"sc-1gyqok2-0\"\n})([\"margin-top:15%;\"]);\nconst FlexEndContainer = styled.div.withConfig({\n  displayName: \"mdxfrontmatter__id__FlexEndContainer\",\n  componentId: \"sc-1gyqok2-1\"\n})([\"display:flex;justify-content:end;\"]);\nhljs.registerLanguage(\"javascript\", javascript);\nconst Content = _ref => {\n  let {children, data: {mdx}} = _ref;\n  const {title, date, tags, relatedLinks} = mdx.frontmatter;\n  useEffect(() => {\n    hljs.highlightAll();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdn.jsdelivr.net/npm/highlight.js@10.7.2/styles/atom-one-dark.min.css\"\n  }), React.createElement(Container, null, React.createElement(\"h1\", null, title), React.createElement(\"div\", null, React.createElement(\"i\", null, \"About \"), tags === null || tags === void 0 ? void 0 : tags.map((tag, idx) => React.createElement(\"i\", {\n    key: idx\n  }, tag, idx !== tags.length - 1 && \", \"))), React.createElement(FlexEndContainer, null, React.createElement(\"i\", null, date)), React.createElement(\"hr\", null)), React.createElement(Container, null, React.createElement(\"section\", null, children)), React.createElement(\"article\", null, React.createElement(\"h3\", null, \"\\uB354 \\uC54C\\uC544\\uBCF4\\uB824\\uBA74?\"), React.createElement(\"ul\", null, relatedLinks === null || relatedLinks === void 0 ? void 0 : relatedLinks.map((link, idx) => React.createElement(\"li\", {\n    key: idx\n  }, React.createElement(\"a\", {\n    href: link || \"#\"\n  }, link))))), React.createElement(FlexEndContainer, null, React.createElement(\"a\", {\n    href: \"https://github.com/0hhanum/null_quiz_answers/issues/new?title=\" + title + \" \\uC218\\uC815 \\uC694\\uCCAD&body=\\uC798\\uBABB\\uB41C \\uC815\\uBCF4\\uB97C \\uACE0\\uCCD0\\uC8FC\\uC2DC\\uBA74 \\uAE30\\uD504\\uD2F0\\uCF58\\uC744 \\uB4DC\\uB824\\uC694 :)\"\n  }, React.createElement(\"p\", null, \"\\uC798\\uBABB\\uB41C \\uC815\\uBCF4\\uAC00 \\uC788\\uB098\\uC694?\"))));\n};\nContent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Content, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = _ref2 => {\n  var _data$mdx, _data$mdx$frontmatter;\n  let {data} = _ref2;\n  return React.createElement(Helmet, {\n    title: ((_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : (_data$mdx$frontmatter = _data$mdx.frontmatter) === null || _data$mdx$frontmatter === void 0 ? void 0 : _data$mdx$frontmatter.title) || \"\"\n  });\n};\nconst query = \"4111235619\";\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","Container","styled","div","attrs","withConfig","displayName","componentId","FlexEndContainer","hljs","registerLanguage","javascript","Content","_ref","children","data","mdx","title","date","tags","relatedLinks","frontmatter","useEffect","highlightAll","rel","href","map","tag","idx","key","length","link","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","_data$mdx","_data$mdx$frontmatter","Helmet"],"sourceRoot":""}